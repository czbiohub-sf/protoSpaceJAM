#!/usr/bin/env python

import sys, optparse
import twobitreader, sys

# ==== functions =====
def revComp(seq):
    table = { "a":"t", "A":"T", "t" :"a", "T":"A", "c":"g", "C":"G", "g":"c", "G":"C", "N":"N", "n":"n", 
            "Y":"R", "R" : "Y", "M" : "K", "K" : "M", "W":"W", "S":"S",
            "H":"D", "B":"V", "V":"B", "D":"H", "y":"r", "r":"y","m":"k",
            "k":"m","w":"w","s":"s","h":"d","b":"v","d":"h","v":"b","y":"r","r":"y" }
    newseq = []
    for nucl in reversed(seq):
       newseq += table[nucl]
    return "".join(newseq)

    
def parseArgs():
    " setup logging, parse command line arguments and options. -h shows auto-generated help page "
    parser = optparse.OptionParser("usage: %prog [options] twoBitFname bedFname - get sequences for bed features and print to stdout")

    #parser.add_option("-d", "--debug", dest="debug", action="store_true", help="show debug messages")
    #parser.add_option("-f", "--file", dest="file", action="store", help="run on file") 
    #parser.add_option("", "--test", dest="test", action="store_true", help="do something") 
    (options, args) = parser.parse_args()

    if args==[]:
        parser.print_help()
        exit(1)

    #if options.debug:
        #logging.basicConfig(level=logging.DEBUG)
    #else:
        #logging.basicConfig(level=logging.INFO)
    return args, options
# ----------- main --------------
def main():
    args, options = parseArgs()

    twoBitFname, bedFname = args

    tbf = twobitreader.TwoBitFile(twoBitFname)

    for line in open(bedFname):
        chrom, start, end, name, score, strand = line.rstrip("\n").split("\t")[:6]
        seq = tbf[chrom][int(start):int(end)]
        print ">"+name
        if strand=="-":
            seq = revComp(seq)
        print seq
    

main()
